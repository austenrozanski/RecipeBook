// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230820050314_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4");

            modelBuilder.Entity("Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Recipe.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CookTimeSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PrepTimeSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Servings")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Domain.Entities.Recipe.Recipe", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<Domain.Entities.Recipe.RecipeDescriptionGroup>", "DescriptionGroups", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.ToJson("DescriptionGroups");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<Domain.Entities.Recipe.RecipeIngredientGroup>", "IngredientGroups", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.ToJson("IngredientGroups");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<Domain.Entities.Recipe.RecipeInstructionGroup>", "InstructionGroups", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.ToJson("InstructionGroups");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<Domain.Entities.Recipe.RecipeTipsAndTricksGroup>", "TipsAndTricksGroups", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.ToJson("TipsAndTricksGroups");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("DescriptionGroups")
                        .IsRequired();

                    b.Navigation("IngredientGroups")
                        .IsRequired();

                    b.Navigation("InstructionGroups")
                        .IsRequired();

                    b.Navigation("TipsAndTricksGroups")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
